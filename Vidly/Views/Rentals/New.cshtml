
@{
    ViewBag.Title = "New Rental Form"; 
}

<style>
    
    label.error {
        color: red !important;
    }

    
    input.error {
        border: 2px solid red !important;
    }
    
</style>


<h2>New Rental Form</h2>

<form action="/" method="post"  id="newRental">

    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input type="text" id="customer"   required class="form-control" name="customer" value="" />
        </div>
        
    </div>

    <div class="form-group">
        <label>Movies</label>
        <div class="tt-container">
            <input type="text" id="movie"  class="form-control" name="movie" value="" />
        </div>
        
    </div>

    <ul id="movies" class="list-group"> 
        
    </ul>

    <button class="btn btn-primary">Submit</button>

</form>

@section scripts{

    @Scripts.Render("~/bundles/jqueryval")
    <script>


        $(document).ready(function () {

            var vm = {
                movieIds:[]
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true

            },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {

                    vm.customerId = customer.id;

                });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead(
                {
                    minLength: 3,
                    highlight: true

                },
                {
                    name: 'movies',
                    display: 'name',
                    source: movies
                })
                .on("typeahead:select", function (e, movie) {

                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                    $("#movie").typeahead("val", "");

                    vm.movieIds.push(movie.id);

                }
            );

            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer.");


            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.movieIds.length > 0;
            },"Please Select at least On Movie");

            var vliadator = $("#newRental").validate({
                rules: {
                    customer: { validCustomer: true },
                    movie: { atLeastOneMovie: true }
                },

                submitHandler: function () {
                    $.ajax({

                        url: "/api/newRentals",
                        method: "post",
                        data: vm

                    })
                    .done(function () {
                        toastr.options.positionClass = "toast-bottom-right";
                        toastr.success("Rentals Successfully recorded.");

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();
                        //$(".list-group-item").remove();
                        vm = { movieIds: [] };
                        validator.resetForm();
                    })
                    .fail(function () {
                        toastr.error("Something Unexpecteded Happend.");
                    });
                    return false;
                }

            });


            //$("#newRental").submit(function(e) {
            //    e.preventDefault();

            //    $.ajax({

            //        url: "/api/newRentals",
            //        method: "post",
            //        data: vm

            //    })
            //        .done(function () {
            //            toastr.options.positionClass = "toast-bottom-right";
            //            $(".list-group-item").remove();
                         
            //            toastr.success("Rentals Successfully recorded.");

                        
            //        })
            //        .fail(function () {
            //            toastr.error("Something Unexpecteded Happend.");
            //        });
            //});

        });

    </script>
}

